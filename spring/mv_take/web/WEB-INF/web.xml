<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">
	<display-name>mv_take</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
	</welcome-file-list>


	<!-- #1-1. 스프링을 이용해 Servlet을 사용하겠음 -->
	<servlet>
		<servlet-name>action</servlet-name>
		<!-- 디스페쳐를 등록함 디스페쳐는 기존에 URL을 사용해야 했던 web.xml을 바꿔준다. -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/config/spring-view.xml</param-value>
		</init-param>
	</servlet>

	<!-- #1-2. 위에 것을 등록하고 .do를 하면 호출하는 것으로 설정하겠음 -->
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<!-- #2. Listener 호출 : ContextLoaderListener사용 -->
	<!-- ContextLoaderListener 클래스는 DispatcherServlet 클래스의 로드보다 먼저 동작하여 -->
	<!-- 비즈니스 로직층을 정의한 스프링 설정 파일을 로드한다 -->
	<!-- 그래서 dispatcher가 url을 가로채기 전에 spring에 대한 설정을 할 수 있는 이유! -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- ContextLoaderListener의 파라미터의 값을 아래 경로의 spring.xml을 사용하겠다는 뜻!(이런 기능을 
		사용하겠다 뭐 이런 뜻) -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/config/spring.xml</param-value>
	</context-param>

	<!-- #3 인코딩 방법을 정한다. -->
	<filter>
		<filter-name>enc</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>EUC-KR</param-value>
		</init-param>
	</filter>
	<!-- web.xml은 url로 정보를 주고 받을 뿐 그 안에 프로그램은 없다. 그렇기 때문에 web.xml은 모두 url에 관한것 -->
	<filter-mapping>
		<filter-name>enc</filter-name>
		<url-pattern>/*</url-pattern><!-- 여기 관한 것은 Dispatcher를 사용할 때 / 이하에 대해서 -->
			<!-- 처리하라고 설정해 놓은것 다른 패턴 설정 가능 -->
	</filter-mapping>

	<!-- #4 Log4J 설정 : 이건 상위 listener의 방법과 같다. -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/config/log4j.properties</param-value>
	</context-param>


</web-app>