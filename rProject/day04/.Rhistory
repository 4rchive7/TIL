version
source('~/.active-rstudio-document', echo=TRUE)
tf <- data.frame(
id=c(1:5),
test=c(85:89)
)
tf
source('~/.active-rstudio-document')
tf <- data.frame(
id=c(1:5),
test=c(86:90)
)
tf2 <- data.frame(
id=c(6:10),
test=c(91:95)
)
tf
total < rbind(tf, tf2)
total <- rbind(tf, tf2)
total
total$test2 <- c(1:9)
total$test2 <- c(1:10)
total
total
total$avg <- rowMeans(total)
total
total$avg <- rowMeans(total, 2)
total
total$avg <- rowMeans(total, 1)
total
total$test2 <- c(89:98)
total$avg <- rowMeans(total, 1)
total
total$avg <- rowMeans(total[,c(2,3)], 1)
total
head(arrange(desc(total$avg)),3)
tmp <- head(arrange(desc(total$avg)),3)
tmp <- arrange(desc(total$avg)
tmp <- arrange(desc(total$avg))
tmp <- arrange(desc(total$avg))
tmp %>% arrange(desc(total$avg))
tmp
tmp
tmp %>% arrange(desc(total$avg))
tmp %>% arrange(desc(avg))
total
total %>% arrange(desc(avg))
tmp %>% group by(total) %>%arrange(desc(avg))
tmp %>% group_by(total) %>%arrange(desc(avg))
tmp <- total
library(dplyr)
tmp %>% arrange(desc(avg))
tmp
tmp %>% arrange(desc(avg))
head(tmp[tmp$avg,], 3)
head(tmp[,tmp$avg], 3)
head(tmp[,4], 3)
tmp %>% arrange(id,desc(avg))
tmp
tmp %>% arrange(desc(avg))
head(tmp[,4], 3)
head(tmp$avg, 3)
pp <- mean(total[,c(4)])
pp
tmp2 <- tmp[which(tmp$avg > pp),]
tmp2
source('C:/rProject/day04/r1.R')
library(ggplot2)
midwest
#page 160
df<-midwest
df$ex1 <- midwest[,c('popadults')]
df
#page 160
df<-midwest
df
view(df)
View(df)
midwest[,c('popadults')]
tmp <- midwest[,c('popadults')]
tmp
tmp2 <- midwest[, c('poptotal')]
df$ex1 <- (tmp2-tmp1)/tmp2
df$ex1 <- (tmp2-tmp)/tmp2
df
View(df)
remane('ex1.poptotal', 'ex1')
remane('ex1.poptotal', 'ex1');
rename('ex1.poptotal', 'ex1');
library(reshape)
rename("ex1.poptotal"="ex1");
df<-midwest
View(df)
tmp <- midwest[,c('popadults')]
tmp2 <- midwest[, c('poptotal')]
df$ex1 <- (tmp2-tmp)/tmp2
View(df)
library(reshape)
rename("ex1.poptotal"="ex1")
View(df)
renames("ex1.poptotal"="ex1")
rename("ex1.poptotal"="ex1")
rename(df, "ex1.poptotal"="ex1")
rename(df, c("ex1.poptotal"="ex1"))
df %>% arrange(desc(ex1.poptotal))
df %>% arrange(desc(ex1))
df
View(df)
source('C:/rProject/day04/r2.R')
df %>% arrange(desc(ex1))
View(df)
rename(df, c("ex1"="t"))
name(df, c("ex1"="t"))
names(df)[29]<-paste("ex1")
View(df)
#page 160
df<-midwest
d
View(df)
tmp <- midwest[,c('popadults')]
tmp2 <- midwest[, c('poptotal')]
df$ex1 <- (tmp2-tmp)/tmp2
View(df)
df$ex1
library(dplyr)
df %>% arrange(desc(ex1))
View(df)
df
df
df
View(df)
source('C:/rProject/day04/r2.R')
names(df)[29]<-paste("ex1")
df$ex1
df %>% arrange(desc(ex1))
df
View(df)
tf <- df %>% arrange(desc(ex1))
tf
View(tf)
ex1<- df$ex1
ex1
class(ex1)
ex1 <- arrange(ex1)
ex1
ex1 %>% arrange(ex1)
ex1 %>% arrange(desc(poptotal))
head(ex1 %>% arrange(desc(poptotal)),3)
head(df$ex1 %>% arrange(desc(poptotal)),3)
head(df %>% arrange(desc(ex1.poptotal)),3)
head(df %>% arrange(desc(ex1)),3)
ex1 <- head(df %>% arrange(desc(ex1)),3)
View(ex1)
ex1 <- df %>% arrange(desc(ex1))
View(ex1)
ex1 <- df %>% arrange(desc(df$ex1))
ex1
View(ex1)
df$ex1 <- (tmp2-tmp)/tmp2
df
df
#page 160
df<-midwest
df
tmp <- midwest[,c('popadults')]
tmp2 <- midwest[, c('poptotal')]
tmp
tmp2
tmp3 <- (tmp2-tmp)/tmp2
tmp3
names(tmp3)[1] -> c('ex1')
names(tmp3)[1] -> c("ex1")
tmp3
names(tmp3) -> c("ex1")
tmp <- midwest[,c('popadults')]
tmp2 <- midwest[, c('poptotal')]
tmp3 <- (tmp2-tmp)/tmp2
names(tmp3) -> c("ex1")
names(tmp3)
names(tmp3) <- c("ex1")
tmp3
df <- cbind(df, tmp3)
df
df <- df[c(df$ex1),]
df
View(df)
#page 160
df<-midwest
tmp <- midwest[,c('popadults')]
tmp2 <- midwest[, c('poptotal')]
tmp3 <- (tmp2-tmp)/tmp2
names(tmp3) <- c("ex1")
df <- cbind(df, tmp3)
View(df)
df <- df[c(order(df$ex1)),]
df
df <- df[c(order(df$ex1), decreasing = T),]
df
df <- df[c(order(df$ex1), decreasing = T),]
df
df <- df[c(order(df$ex1, decreasing = T)),]
df
head(df$ex1,5)
df$ex2 <- ifelse(df$ex1 >= 0.40, 'large',
ifelse(df$ex1 >=30, 'middle', 'small'))
df$ex2
df
#ex4
view(df)
#ex4
View(df)
asian <- df$pototal*df$popasian
asia
asian
asian <- df$pototal*df$popasian
asian
df$asian <- df$pototal*df$popasian
asian <- df$poptotal*df$popasian
asian <- df$poptotal*df$popasian
total <- colSums(df[,df$poptotal])
total <- colSums(df[df$poptotal,])
total <- colSums(df[,c('poptotal')])
total <- rowSums(df[df$poptotal],)
total <- rowSums(df[df$poptotal,])
total <- rowSums(df[,df$poptotal])
total <- colSums(df[,df$poptotal])
total <- colSums(df[df$poptotal,])
total <- colSums(df[,c(5)])
df[,c(5)]
total <- rowSums(df[,c(5)])
total <- rowMeans(df[,c(5)])
rate <- df$popasian/
head(df[order(popasianrate),], 10)
rate <- df$popasian/df$poptotal*100
head(df[order(rate),], 10)
df$rate <- df$popasian/df$poptotal*100
head(df[order(df$rate),c('state','country','rate')], 10)
head(df[order(df$rate),], 10)
head(df[order(df$rate),c('state','country','rate')], 10)
df$rate <- df$popasian/df$poptotal*100
head(df[order(df$rate),c('state','country','rate')], 10)
head(df[order(df$rate),c('state','county','rate')], 10)
st <- read.csv('csv_exam.csv', header=F)
st
st <- read.csv('csv_exam.csv', header=T)
st
View(st)
st <- read.csv('csv_exam.csv', header=T)
st
table(is.na(st$class))
table(is.na(st$ko))
table(is.na(st$math))
colnames(st) <- c('id','class','ko','en','ma')
table(is.na(st$ko))
mean(st$ko)
mean(st$ko, na.rm = T)
st[,c(1:3)]
st[which(st$ko != NA),c(1:3)]
st <- read.csv('csv_exam.csv', header=T)
st
Vuiew
View(st)
colnames(st) <- c('id','class','ko','en','ma')
table(is.na(st$ko))
mean(st$ko, na.rm = T)
st[which(st$ko != NA),c(1:3)]
st[which(st$ko == NA),c(1:3)]
table(is.na(st$ko))
st
st[which(st$ko == 50),c(1:3)]
st[which(st$ko != NA),c(1:3)]
#st[which(st$ko != NA),c(1:3)]
st[!is.na(st$ko) & !is.na(st$class), c(1:3)]
&
#st[which(st$ko != NA),c(1:3)]
st[!is.na(st$ko) | !is.na(st$class), c(1:3)]
na.omit(st[,c(1:3)])
# 국어, 영어, 수학 성적의 평균을 구하여
# vector를 만든다.
ex1 <- rowMean(na.omit(st[,c(3:5)]))
# 국어, 영어, 수학 성적의 평균을 구하여
# vector를 만든다.
ex1 <- rowMeans(na.omit(st[,c(3:5)]))
ex1
ex1_1 <- colMeans(st[,c(3:5)], na.rm = T)
ex1_1
notNA <- ifelse(is.na(notNA$ko), 1, notNA$ko)
# NA 값을 모두 0으로 바꾸시오
notNA <- st
notNA <- ifelse(is.na(notNA$ko), 1, notNA$ko)
notNA <- ifelse(is.na(notNA$ko), 1, notNA$ko)
notNA <- ifelse(is.na(notNA$en), 1, notNA$en)
notNA <- ifelse(is.na(notNA$ma), 1, notNA$ma)
notNA
# NA 값을 모두 0으로 바꾸시오
notNA <- st
notNA <- ifelse(is.na(notNA$ko), 1, notNA$ko)
notNA <- ifelse(is.na(notNA$en), 1, notNA$en)
# NA 값을 모두 0으로 바꾸시오
notNA <- st
notNA
notNA <- ifelse(is.na(notNA$ko), 1, notNA$ko)
notNA
# NA 값을 모두 0으로 바꾸시오
notNA <- st
notNA$ko <- ifelse(is.na(notNA$ko), 1, notNA$ko)
notNA$en <- ifelse(is.na(notNA$en), 1, notNA$en)
notNA$ma <- ifelse(is.na(notNA$ma), 1, notNA$ma)
notNA
boxplot(notNA$ko)
# NA 값을 모두 0으로 바꾸시오
notNA <- st[na,]
# NA 값을 모두 0으로 바꾸시오
notNA <- st[is.na(st)]
notNA
# NA 값을 모두 0으로 바꾸시오
notNA <- st[is.na(st)]=0
st[is.na(st)]=0
st
boxplot(notNA$en)
boxplot(st$en)
histplot(st$en)
boxplot(st$en)
histplot(st$en)
hist(st$en)
hist(st$en)
