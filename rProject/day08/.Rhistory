#조사 단위 별로 연도별로 1~7인가구의 변화
raw_emp<-emp
tmp <- aggregate(TOTAL~LOC+YEAR+FAMILY, emp, sum)
#조사 단위 별로 연도별로 1~7인가구의 변화
raw_emp<-emp
library('dplyr')
tmp <- aggregate(TOTAL~LOC+YEAR+FAMILY, emp, sum)
tmp <- tmp[tmp$FAMILY !='총계' & tmp$YEAR==2010,]
tmp2 <- head(tmp[order(tmp$TOTAL, decreasing =T),], 50)
#options(scipen = 10000000)
ggplot(data=tmp2, aes(x=FAMILY, y=TOTAL, col=LOC))+geom_point()
FAMILY
#options(scipen = 10000000)
ggplot(data=tmp2, aes(x=FAMILY, y=TOTAL, col=LOC))+geom_point()
pp <- tmp[tmp$YEAR==2010,]
tmp
pp <- tmp[tmp$YEAR==2010,]
tmp2 <- head(tmp[order(tmp$TOTAL, decreasing =T),], 50)
tmp2
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
tmp2
pp <- tmp[tmp$FAMILY !='동부' & tmp$YEAR==2010,]
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
tmp2
pp <- tmp[tmp$LOC !='동부' & tmp$YEAR==2010,]
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
tmp2
pp <- tmp[tmp$LOC !='동부' | tmp$YEAR==2010,]
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
tmp2
pp <- tmp[tmp$LOC !='동부' | tmp$YEAR==2010,]
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
pp <- tmp[tmp$YEAR==2010,]
pp <- pp[pp$LOC !='동부',]
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
tmp2
pp <- tmp[tmp$YEAR==2010,]
pp <- pp[pp$LOC =='동부',]
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
tmp2
pp <- tmp[tmp$YEAR==2010,]
pp
pp <- pp[pp$LOC !='동부',]
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
tmp2
pp <- pp[pp$LOC !='%동부%',]
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
tmp2
pp <- pp[pp$LOC !='동부',]
pp <- pp[pp$LOC !='동부',]
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
tmp2
pp <- pp[pp$LOC =='동부',]
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
tmp2
tmp2
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
tmp2
tmp <- aggregate(TOTAL~LOC+YEAR+FAMILY, emp, sum)
tmp <- tmp[tmp$FAMILY !='총계' & tmp$YEAR==2010,]
pp <- tmp[tmp$YEAR==2010,]
pp <- pp[pp$LOC =='동부',]
tmp2 <- head(pp[order(pp$TOTAL, decreasing =T),], 10)
tmp2
pp <- pp[pp$LOC !='동부',]
View(pp)
View(pp)
pp <- pp[pp$LOC !='동부',]
View(pp)
pp <- tmp[tmp$YEAR==2010,]
pp
View(pp)
pp <- pp[pp$LOC !='동부',]
View(pp)
emp
library('dplyr')
tmp <- aggregate(TOTAL~LOC+YEAR+FAMILY, emp, sum)
View(tmp)
tmp <- aggregate(TOTAL~LOC+YEAR+FAMILY, emp, sum)
tmp <- tmp[tmp$FAMILY !='동부' & tmp$YEAR==2010,]
tmp
tmp <- tmp[tmp$FAMILY !='동부' & tmp$YEAR==2010,]
tmp
tmp
tmp <- tmp[tmp$FAMILY !='동부' & tmp$YEAR==2010,]
tmp
tmp <- tmp[tmp$LOC !='동부' & tmp$YEAR==2010,]
tmp <- aggregate(TOTAL~LOC+YEAR+FAMILY, emp, sum)
tmp <- tmp[tmp$LOC !='동부' & tmp$YEAR==2010,]
tmp
loc_name <- c('동부', '면부', '읍부', '경기도', '경상남도', '경상북도')
tmp <- tmp[tmp$LOC != loc_name & tmp$YEAR==2010,]
View(tmp)
food <- getDel()
source('C:/rProject/day08/ozo.R', encoding = 'UTF-8')
food <- getDel()
weather <- getWeather()
weather <- getWeather()
weather <- getWeather()
source('C:/rProject/day08/ozo.R', encoding = 'UTF-8')
weather <- getWeather()
weather
food <- getDel()
food
str(food)
str(changeCode(food))
library('stringi')
str(changeCode(food))
food <- getDel()
str((food))
library('dplyr')
food <- rename(food,
DATE = 癤풡ATE)
str((food))
str((food))
delivery <- getDel()
delivery <- rename(food,
DATE = 癤풡ATE)
str(delivery)
delivery <- rename(delivery,
DATE = 癤풡ATE)
delivery2 <- aggregate(calls~date+food, delivery, sum)
delivery2 <- aggregate(CALLS~DATE+FOOD, delivery, sum)
delivery2
ifelse(weather$sky>=3, 1, 0)
weather$state <- ifelse(weather$rain >= 1, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather <- getWeather()
source('C:/rProject/day08/ozo.R', encoding = 'UTF-8')
weather <- getWeather()
weather$state <- ifelse(weather$rain >= 1, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather
weather <- rename(weather,
sky = _c1,
rain = _c2)
weather <- rename(weather,
sky =  c1,
rain =  c2)
str(weather)
weather <- rename(weather,
sky = '_c1',
rain = '_c1')
weather$state <- ifelse(weather$rain >= 1, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather
weather <- getWeather()
raw_weather <- weather
weather
weather <- rename(weather,
sky = '_c1',
rain = '_c1')
weather
weather <- rename(weather,
sky = '_c1',
rain = '_c2')
weather <- rename(weather,
rain = '_c2')
weather
weather$state <- ifelse(weather$rain >= 3, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather
weather$state <- if(weather$state == NA, 0)
weather$state <- weather[which(weather$state == NA, 0),]
weather$state <- ifelse(weather$state == NA, 0, weather$state)
weather$state
weather$state <- ifelse(weather$rain >= 3, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather
weather$state <- ifelse(weather$state == NA, 0, weather$state)
weather
weather$state <- ifelse(weather$rain >= 3, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather
weather$state <- ifelse(is.NA(weather$state), 0, weather$state)
weather$state <- ifelse(is.na(weather$state), 0, weather$state)
weather
delivery2
weather
delivery2$DATE <- as.Date(delivery2$DATE)
tmp <- as.Date(delivery2$DATE)
delivery2$DATE <- as.Date(delivery2$DATE, "yyyy-mm-dd")
delivery2$DATE <- as.Date(delivery2$DATE, format="%Y-%m-%d")
delivery2 <- aggregate(CALLS~DATE+FOOD, delivery, sum)
delivery2
delivery2$DATE <- as.Date(delivery2$DATE, format="%Y-%m-%d")
delivery2$DATE <- as.Date(delivery2$DATE, "%Y-%m-%d")
delivery <- getDel()
delivery
delivery2$DATE <- as.Date(delivery2$DATE, "%Y-%m-%d")
str(weather)
raw_weather
weather <-raw_weather
weather <- rename(weather,
sky = '_c1',
rain = '_c2')
str(weather)
weather <- rename(weather,
sky = '_c1',
rain = '_c2')
weather$state <- ifelse(weather$rain >= 3, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather$state <- ifelse(is.na(weather$state), 0, weather$state)
weather
delivery2
delivery2$DATE <- as.Date(delivery2$DATE, "%Y-%m-%d")
delivery2$DATE <- as.Date(delivery2$DATE)
delivery2$DATE <- as.Date(delivery2$DATE, origin="19700101")
delivery2$DATE <- as.Date(delivery2$DATE, origin="1970-01-01")
delivery2$DATE
delivery2
delivery2$DATE <- as.Date(delivery2$DATE, origin="2000-01-01")
delivery2
delivery <- getDel()
raw_delivery <- delivery
delivery <- rename(delivery,
DATE = 癤풡ATE)
delivery2 <- aggregate(CALLS~DATE+FOOD, delivery, sum)
delivery2
delivery2$DATE <- as.Date(delivery2$DATE, origin="2000-01-01")
delivery2
delivery <- raw_delivery
delivery2
delivery <- raw_delivery
delivery
delivery <- rename(delivery,
DATE = 癤풡ATE)
delivery2 <- aggregate(CALLS~DATE+FOOD, delivery, sum)
delivery2$DATE <- as.character(delivery2$DATE)
delivery2
delivery2$DATE <- as.Date(delivery2$DATE, format ="%Y-%m-%d")
delivery2
delivery2 <- aggregate(CALLS~DATE+FOOD, delivery, sum)
delivery2$DATE <- as.character(delivery2$DATE)
delivery2
delivery2$DATE <- as.Date(delivery2$DATE, "%Y-%m-%d")
delivery2
delivery2 <- aggregate(CALLS~DATE+FOOD, delivery, sum)
delivery2$DATE <- as.character(delivery2$DATE)
delivery2
delivery2$TEST <- as.Date(delivery2$DATE, format ="%Y-%m-%d")
delivery2$TEST
delivery2$TEST <- as.Date(delivery2$DATE)
delivery2
delivery2$TEST <- as.Date(delivery2$DATE)
delivery2$TEST <- as.Date(delivery2$DATE, origin="1970-01-01")
delivery2 <- aggregate(CALLS~DATE+FOOD, delivery, sum)
delivery2$DATE <- as.Date(delivery2$DATE, origin="1970-01-01")
delivery2
delivery2$DATE <- as.Date(delivery2$DATE, origin="2150-01-01")
delivery2
delivery2 <- aggregate(CALLS~DATE+FOOD, delivery, sum)
delivery2
delivery <- getDel()
source('C:/rProject/day08/ozo.R', encoding = 'UTF-8')
delivery
delivery <- getDel()
delivery
str(delivery)
delivery <- rename(delivery,
DAY = 癤풡AY)
str(delivery)
delivery2$DATE <- as.Date(delivery2$DATE)
delivery2$DATE <- as.Date(delivery2$DATE)
delivery2$DATE <- as.Date(delivery2$DATE)
delivery2$DATE <- as.Date(delivery2$DATE, origin="%Y-%m-%d")
delivery2$DATE <- as.Date(delivery2$DATE, origin="1970-01-01", format="%Y-%m-%d")
delivery2
delivery2 <- aggregate(CALLS~DAY+FOOD, delivery, sum)
delivery2$DATE <- as.Date(delivery2$DATE, format="%Y-%m-%d")
delivery2$DATE <- as.Date(delivery2$DAY, format="%Y-%m-%d")
delivery2
raw_delivery <- delivery
delivery <- rename(delivery,
DAY = 癤풡AY)
delivery2 <- aggregate(CALLS~DAY+FOOD, delivery, sum)
delivery2$DAY <- as.Date(delivery2$DAY, format="%Y-%m-%d")
delivery2
str(delivery)
delivery2$DAY <- as.Date(delivery2$DAY, format="%Y-%m-%d")
str(delivery)
str(delivery)
delivery2$DAY <- as.Date(delivery2$DAY, format="%Y-%m-%d")
str(delivery)
weather
weather$date <- as.Date(weather$date, format="%Y-%m-%d")
weather
delivery2
weather
weather$sky <- round(weather$sky, 0)
weather
result <- weather
weather <- rename(weather,
DAY = date)
result <- left_join(result, delivery2, id = "DAY")
result <- left_join(result, weather, id = "DAY")
result
str(delivery2)
str(weather)
result
str(delivery2)
delivery2
result <- delivery2
result
weather
result <- left_join(result, weather, id = "DAY")
result
library(ggplot2)
result2<-aggregate(FOOD~state+DAY, result, n=n())
result2<-aggregate(FOOD~state+DAY, result, count)
table(result2)
table(result)
result
ggplot(result, aes(x=state, y=CALLS, col = food))+ geom_line()
ggplot(result, aes(x=state, y=CALLS)+ geom_line()
ggplot(result, aes(x=state, y=CALLS)+ geom_line()
ggplot(result, aes(x=state, y=CALLS))+ geom_line()
ggplot(result, aes(x=state, y=CALLS))+ geom_col()
ggplot(result, aes(x=state, y=CALLS, col = FOOD))+ geom_col()
ggplot(result, aes(x=state, y=CALLS, col = FOOD))+ geom_line()
ggplot(result, aes(x=state, y=CALLS, col = FOOD))+ geom_col()
result2<-aggregate(CALLS~state+FOOT, result, mean)
result2<-aggregate(CALLS~state+FOOD, result, mean)
result2
ggplot(result2, aes(x=state, y=CALLS, col = FOOD))+ geom_col()
ggplot(result, aes(x=state, y=CALLS, flip = food))+ geom_line()
ggplot(result2, aes(x=state, y=CALLS, fill = FOOD))+ geom_col()
ggplot(result2, aes(x=state, y=CALLS, fill = FOOD))+ geom_line()
ggplot(result2, aes(x=state, y=CALLS, col = FOOD))+ geom_line()
ggplot(result2, aes(x=state, y=CALLS, col = FOOD), type = 1)+ geom_line()
result2$state <- ifelse(result2$state == 2, '눈/비',
ifelse(result2$state == 1, '흐림', '맑음'))
ggplot(result2, aes(x=state, y=CALLS, col = FOOD))+ geom_line()+
ggplot(result2, aes(x=state, y=CALLS, col = FOOD))+ geom_line()
result2$state <- ifelse(result2$state == 2, '눈/비',
ifelse(result2$state == 1, '흐림', '맑음'))
result2
result2<-aggregate(CALLS~state+FOOD, result, mean)
result2
result2$states <- ifelse(result2$state == 2, '눈/비',
ifelse(result2$state == 1, '흐림', '맑음'))
result2
ggplot(result2, aes(x=states, y=CALLS, col = FOOD))+ geom_line()
ggplot(result2, aes(x=states, y=CALLS))+ geom_line()
ggplot(result2, aes(x=states, y=CALLS))+ geom_col()
ggplot(result2, aes(x=states, y=CALLS, fill=food))+ geom_col()
ggplot(result2, aes(x=states, y=CALLS, fill=FOOD)+ geom_col()
ggplot(result2, aes(x=states, y=CALLS, fill=FOOD))+ geom_col()
ggplot(result2, aes(x=stateS, y=CALLS, fill=FOOD))+ geom_col()
ggplot(result2, aes(x=state, y=CALLS, fill=FOOD))+ geom_col()
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line()
ggplot(result2, aes(x=state, y=CALLS, fill=FOOD))+ geom_col()
line
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line()
ggplot(result2, aes(x=state, y=CALLS, fill=FOOD))+ geom_col()
ggplot(result2, aes(x=state, y=CALLS, fill=FOOD))+ geom_col(position = 'dodge')
line
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line()
result2<-aggregate(CALLS~state+FOOD, result, sum)
result2$states <- ifelse(result2$state == 2, '눈/비',
ifelse(result2$state == 1, '흐림', '맑음'))
result2<-aggregate(CALLS~state+FOOD, result, sum)
result2$states <- ifelse(result2$state == 2, '눈/비',
ifelse(result2$state == 1, '흐림', '맑음'))
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line()
ggplot(result2, aes(x=state, y=CALLS, fill=FOOD))+ geom_col()
result
View(result)
result2<-aggregate(CALLS~state+FOOD, result, mean)
ggplot(result2, aes(x=state, y=CALLS, fill=FOOD))+ geom_col()
ggplot(result2, aes(x=state, y=CALLS, fill=FOOD))+ geom_col(position = 'dodge')
ggplot(result2, aes(x=state, y=CALLS, fill=FOOD))+ geom_line(position = 'dodge')
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line(position = 'dodge')
weather$state <- ifelse(weather$rain >= 1, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather$state <- ifelse(is.na(weather$state), 0, weather$state)
weather
weather$date <- as.Date(weather$date, format="%Y-%m-%d")
weather$sky <- round(weather$sky, 0)
result <- delivery2
result <- left_join(result, weather, id = "DAY")
result2<-aggregate(CALLS~state+FOOD, result, mean)
result2$states <- ifelse(result2$state == 2, '눈/비',
ifelse(result2$state == 1, '흐림', '맑음'))
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line(position = 'dodge')
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line(position = 'dodge')
delivery2$DAY <- as.Date(delivery2$DAY, format="%Y-%m-%d")
str(delivery)
View(result)
weather$state <- ifelse(weather$rain >= 1, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather$state <- ifelse(is.na(weather$state), 0, weather$state)
weather$date <- as.Date(weather$date, format="%Y-%m-%d")
weather$sky <- round(weather$sky, 0)
weather$state <- ifelse(weather$rain >= 5, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather$state <- ifelse(is.na(weather$state), 0, weather$state)
weather$date <- as.Date(weather$date, format="%Y-%m-%d")
weather$sky <- round(weather$sky, 0)
weather$state <- ifelse(weather$rain >= 5, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather$state <- ifelse(is.na(weather$state), 0, weather$state)
weather$sky <- round(weather$sky, 0)
str(weather)
weather
result <- delivery2
result <- left_join(result, weather, id = "DAY")
library(ggplot2)
result2<-aggregate(CALLS~state+FOOD, result, mean)
result2$states <- ifelse(result2$state == 2, '눈/비',
ifelse(result2$state == 1, '흐림', '맑음'))
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line(position = 'dodge')
weather$state <- ifelse(weather$rain >= 7, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather$state <- ifelse(is.na(weather$state), 0, weather$state)
weather$sky <- round(weather$sky, 0)
result <- delivery2
result <- left_join(result, weather, id = "DAY")
library(ggplot2)
result2<-aggregate(CALLS~state+FOOD, result, mean)
result2$states <- ifelse(result2$state == 2, '눈/비',
ifelse(result2$state == 1, '흐림', '맑음'))
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line(position = 'dodge')
weather$state <- ifelse(weather$rain >= 5, 2,
ifelse(weather$sky>=3, 1, 0)
)
weather$state <- ifelse(is.na(weather$state), 0, weather$state)
weather$sky <- round(weather$sky, 0)
result <- delivery2
str(weather)
str(delivery2)
result <- left_join(result, weather, id = "DAY")
library(ggplot2)
result2<-aggregate(CALLS~state+FOOD, result, mean)
result2$states <- ifelse(result2$state == 2, '눈/비',
ifelse(result2$state == 1, '흐림', '맑음'))
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line(position = 'dodge')
weather$state <- ifelse(weather$rain >= 5, 2,
ifelse(weather$sky>=3, 1, 0))
weather$state <- ifelse(is.na(weather$state), 0, weather$state)
weather$sky <- round(weather$sky, 0)
# weather 가공
#--------------------------------------------------------------------------------
delivery2 <- aggregate(CALLS~DAY+FOOD, delivery, sum)
# delivery 가공
#--------------------------------------------------------------------------------
result <- delivery2
result <- left_join(result, weather, id = "DAY")
result2<-aggregate(CALLS~state+FOOD, result, mean)
result2$states <- ifelse(result2$state == 2, '눈/비',
ifelse(result2$state == 1, '흐림', '맑음'))
# 데이터 합치기
#--------------------------------------------------------------------------------
library(ggplot2)
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line(position = 'dodge')
# 그리기
weather <- rename(weather,
DAY = date,
sky = '_c1',
rain = '_c2')
weather$DAY <- as.Date(weather$DAY, format="%Y-%m-%d")
weather
source('C:/rProject/day08/ozo.R', encoding = 'UTF-8')
library('dplyr')
source('C:/rProject/day08/ozo.R', encoding = 'UTF-8')
#--------------------------------------------------------------------------------
weather <- getWeather()
weather
weather <- rename(weather,
DAY = date,
sky = '_c1',
rain = '_c2')
weather$DAY <- as.Date(weather$DAY, format="%Y-%m-%d")
#--------------------------------------------------------------------------------
delivery <- getDel()
delivery <- rename(delivery,
DAY = 癤풡AY)
delivery2$DAY <- as.Date(delivery2$DAY, format="%Y-%m-%d")
delivery2 <- aggregate(CALLS~DAY+FOOD, delivery, sum)
delivery2$DAY <- as.Date(delivery2$DAY, format="%Y-%m-%d")
#--------------------------------------------------------------------------------
weather$state <- ifelse(weather$rain >= 5, 2,
ifelse(weather$sky>=3, 1, 0))
weather$state <- ifelse(is.na(weather$state), 0, weather$state)
weather$sky <- round(weather$sky, 0)
#--------------------------------------------------------------------------------
result <- delivery2
result <- left_join(result, weather, id = "DAY")
result2<-aggregate(CALLS~state+FOOD, result, mean)
result2$states <- ifelse(result2$state == 2, '눈/비',
ifelse(result2$state == 1, '흐림', '맑음'))
#--------------------------------------------------------------------------------
library(ggplot2)
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line(position = 'dodge')
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line()
source('C:/rProject/day08/ozo.R', encoding = 'UTF-8')
ggplot(result2, aes(x=state, y=CALLS, fill=FOOD))+ geom_col()
ggplot(result2, aes(x=state, y=CALLS, fill=FOOD))+ geom_col(position = 'dodge')
line
ggplot(result2, aes(x=state, y=CALLS, col=FOOD))+ geom_line()
